global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "/etc/prometheus/production-alert-rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]

  # QoderResume Application Metrics
  - job_name: "qoder-resume-backend"
    static_configs:
      - targets: ["localhost:3001"]
    metrics_path: "/metrics"
    scrape_interval: 5s

  # QoderResume Frontend Metrics (if available)
  - job_name: "qoder-resume-frontend"
    static_configs:
      - targets: ["localhost:3000"]
    metrics_path: "/api/metrics"
    scrape_interval: 10s

  # PostgreSQL Database Metrics
  - job_name: "postgresql"
    static_configs:
      - targets: ["localhost:9187"]
    scrape_interval: 10s

  # Redis Metrics
  - job_name: "redis"
    static_configs:
      - targets: ["localhost:9121"]
    scrape_interval: 10s

  # Node Exporter for System Metrics
  - job_name: "node-exporter"
    static_configs:
      - targets: ["localhost:9100"]
    scrape_interval: 5s

  # K6 Load Testing Metrics
  - job_name: "k6"
    static_configs:
      - targets: ["localhost:6565"]
    scrape_interval: 1s
    metrics_path: "/metrics"

  # Docker Container Metrics (if using Docker)
  - job_name: "docker"
    static_configs:
      - targets: ["localhost:9323"]
    scrape_interval: 10s

# Remote write configuration (for long-term storage if needed)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     headers:
#       Authorization: "Bearer <token>"

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 7d
    retention.size: 10GB
