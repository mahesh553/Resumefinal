input {
  beats {
    port => 5044
  }
  
  # Direct log input from QoderResume application
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # UDP input for high-volume logs
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Parse JSON logs from QoderResume
  if [fields][service] == "qoder-resume" {
    json {
      source => "message"
    }
    
    # Add timestamp if not present
    if ![timestamp] {
      mutate {
        add_field => { "timestamp" => "%{@timestamp}" }
      }
    }
    
    # Parse log level
    if [level] {
      mutate {
        uppercase => [ "level" ]
      }
    }
    
    # Extract performance metrics
    if [type] == "performance" {
      mutate {
        add_tag => [ "performance" ]
      }
      
      # Convert duration to number
      if [duration] {
        mutate {
          convert => { "duration" => "float" }
        }
      }
    }
    
    # Tag security events
    if [type] == "security" {
      mutate {
        add_tag => [ "security", "alert" ]
      }
    }
    
    # Tag business events
    if [type] == "business" {
      mutate {
        add_tag => [ "business" ]
      }
    }
    
    # Tag API requests
    if [type] == "api_request" {
      mutate {
        add_tag => [ "api" ]
      }
      
      # Convert response time to number
      if [responseTime] {
        mutate {
          convert => { "responseTime" => "float" }
        }
      }
      
      # Convert status code to number
      if [statusCode] {
        mutate {
          convert => { "statusCode" => "integer" }
        }
      }
      
      # Tag errors
      if [statusCode] >= 400 {
        mutate {
          add_tag => [ "error" ]
        }
      }
    }
    
    # Tag database operations
    if [type] == "database" {
      mutate {
        add_tag => [ "database" ]
      }
      
      if [duration] {
        mutate {
          convert => { "duration" => "float" }
        }
      }
      
      # Tag slow queries
      if [duration] > 1000 {
        mutate {
          add_tag => [ "slow_query" ]
        }
      }
    }
    
    # Tag queue operations
    if [type] == "queue" {
      mutate {
        add_tag => [ "queue" ]
      }
      
      if [duration] {
        mutate {
          convert => { "duration" => "float" }
        }
      }
    }
    
    # Tag AI operations
    if [type] == "ai" {
      mutate {
        add_tag => [ "ai" ]
      }
      
      if [duration] {
        mutate {
          convert => { "duration" => "float" }
        }
      }
      
      # Tag expensive operations
      if [tokensUsed][input] {
        mutate {
          convert => { "[tokensUsed][input]" => "integer" }
        }
      }
      
      if [tokensUsed][output] {
        mutate {
          convert => { "[tokensUsed][output]" => "integer" }
        }
      }
    }
    
    # Tag authentication events
    if [type] == "auth" {
      mutate {
        add_tag => [ "auth" ]
      }
      
      # Tag failed auth attempts
      if [success] == false {
        mutate {
          add_tag => [ "auth_failure", "security" ]
        }
      }
    }
    
    # Extract error information
    if [level] == "ERROR" {
      mutate {
        add_tag => [ "error" ]
      }
      
      # Parse stack trace if present
      if [stack] {
        mutate {
          add_tag => [ "exception" ]
        }
      }
    }
    
    # GeoIP lookup for IP addresses
    if [ip] and [ip] != "127.0.0.1" and [ip] != "::1" {
      geoip {
        source => "ip"
        target => "geoip"
      }
    }
    
    # User agent parsing
    if [userAgent] {
      useragent {
        source => "userAgent"
        target => "user_agent"
      }
    }
  }
  
  # Process Docker container logs
  if [container] {
    # Extract container information
    mutate {
      add_field => { "container_name" => "%{[container][name]}" }
      add_field => { "container_id" => "%{[container][id]}" }
    }
  }
  
  # Add common fields
  mutate {
    add_field => { "processed_at" => "%{@timestamp}" }
    add_field => { "log_source" => "qoder-resume" }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "[agent]", "[ecs]", "[host][architecture]", "[host][os][build]" ]
  }
}

output {
  # Main application logs
  if [fields][service] == "qoder-resume" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "qoder-resume-logs-%{+YYYY.MM.dd}"
      template_name => "qoder-resume"
      template_pattern => "qoder-resume-*"
      template => "/usr/share/logstash/templates/qoder-resume-template.json"
    }
  }
  
  # Performance logs
  if "performance" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "qoder-resume-performance-%{+YYYY.MM.dd}"
    }
  }
  
  # Security logs
  if "security" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "qoder-resume-security-%{+YYYY.MM.dd}"
    }
  }
  
  # Error logs
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "qoder-resume-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # Debug output
  if [level] == "DEBUG" {
    stdout { 
      codec => rubydebug 
    }
  }
}